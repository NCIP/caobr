package org.cagrid.caobr.client;

import java.io.InputStream;
import java.rmi.RemoteException;

import javax.xml.namespace.QName;

import org.apache.axis.EngineConfiguration;
import org.apache.axis.client.AxisClient;
import org.apache.axis.client.Stub;
import org.apache.axis.configuration.FileProvider;
import org.apache.axis.message.addressing.EndpointReferenceType;
import org.apache.axis.types.URI.MalformedURIException;

import org.oasis.wsrf.properties.GetResourcePropertyResponse;

import org.globus.gsi.GlobusCredential;

import org.cagrid.caobr.stubs.CaObrPortType;
import org.cagrid.caobr.stubs.service.CaObrServiceAddressingLocator;
import org.cagrid.caobr.common.CaObrI;
import gov.nih.nci.cagrid.introduce.security.client.ServiceSecurityClient;

/**
 * This class is autogenerated, DO NOT EDIT GENERATED GRID SERVICE ACCESS METHODS.
 *
 * This client is generated automatically by Introduce to provide a clean unwrapped API to the
 * service.
 *
 * On construction the class instance will contact the remote service and retrieve it's security
 * metadata description which it will use to configure the Stub specifically for each method call.
 * 
 * @created by Introduce Toolkit version 1.3
 */
public class CaObrClient extends CaObrClientBase implements CaObrI {	

	public CaObrClient(String url) throws MalformedURIException, RemoteException {
		this(url,null);	
	}

	public CaObrClient(String url, GlobusCredential proxy) throws MalformedURIException, RemoteException {
	   	super(url,proxy);
	}
	
	public CaObrClient(EndpointReferenceType epr) throws MalformedURIException, RemoteException {
	   	this(epr,null);
	}
	
	public CaObrClient(EndpointReferenceType epr, GlobusCredential proxy) throws MalformedURIException, RemoteException {
	   	super(epr,proxy);
	}

	public static void usage(){
		System.out.println(CaObrClient.class.getName() + " -url <service url>");
	}
	
	public static void main(String [] args){
	    System.out.println("Running the Grid Service Client");
		try{
		if(!(args.length < 2)){
			if(args[0].equals("-url")){
			  CaObrClient client = new CaObrClient(args[1]);
			  // place client calls here if you want to use this main as a
			  // test....
			} else {
				usage();
				System.exit(1);
			}
		} else {
			usage();
			System.exit(1);
		}
		} catch (Exception e) {
			e.printStackTrace();
			System.exit(1);
		}
	}

  public org.oasis.wsrf.properties.GetMultipleResourcePropertiesResponse getMultipleResourceProperties(org.oasis.wsrf.properties.GetMultipleResourceProperties_Element params) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getMultipleResourceProperties");
    return portType.getMultipleResourceProperties(params);
    }
  }

  public org.oasis.wsrf.properties.GetResourcePropertyResponse getResourceProperty(javax.xml.namespace.QName params) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getResourceProperty");
    return portType.getResourceProperty(params);
    }
  }

  public org.oasis.wsrf.properties.QueryResourcePropertiesResponse queryResourceProperties(org.oasis.wsrf.properties.QueryResourceProperties_Element params) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"queryResourceProperties");
    return portType.queryResourceProperties(params);
    }
  }

  public edu.wustl.caobr.Annotation[] getAllAnnotations(java.lang.String token) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getAllAnnotations");
    org.cagrid.caobr.stubs.GetAllAnnotationsRequest params = new org.cagrid.caobr.stubs.GetAllAnnotationsRequest();
    params.setToken(token);
    org.cagrid.caobr.stubs.GetAllAnnotationsResponse boxedResult = portType.getAllAnnotations(params);
    return boxedResult.getAnnotation();
    }
  }

  public edu.wustl.caobr.Concept[] getAllConcepts(java.lang.String conceptName) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getAllConcepts");
    org.cagrid.caobr.stubs.GetAllConceptsRequest params = new org.cagrid.caobr.stubs.GetAllConceptsRequest();
    params.setConceptName(conceptName);
    org.cagrid.caobr.stubs.GetAllConceptsResponse boxedResult = portType.getAllConcepts(params);
    return boxedResult.getConcept();
    }
  }

  public edu.wustl.caobr.Ontology[] getAllOntologies() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getAllOntologies");
    org.cagrid.caobr.stubs.GetAllOntologiesRequest params = new org.cagrid.caobr.stubs.GetAllOntologiesRequest();
    org.cagrid.caobr.stubs.GetAllOntologiesResponse boxedResult = portType.getAllOntologies(params);
    return boxedResult.getOntology();
    }
  }

  public edu.wustl.caobr.Resource[] getAllResources() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getAllResources");
    org.cagrid.caobr.stubs.GetAllResourcesRequest params = new org.cagrid.caobr.stubs.GetAllResourcesRequest();
    org.cagrid.caobr.stubs.GetAllResourcesResponse boxedResult = portType.getAllResources(params);
    return boxedResult.getResource();
    }
  }

  public edu.wustl.caobr.Annotation[] getAnnotations(edu.wustl.caobr.Ontology[] fromOntologies,edu.wustl.caobr.Resource[] fromResources,java.lang.String token) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getAnnotations");
    org.cagrid.caobr.stubs.GetAnnotationsRequest params = new org.cagrid.caobr.stubs.GetAnnotationsRequest();
    org.cagrid.caobr.stubs.GetAnnotationsRequestFromOntologies fromOntologiesContainer = new org.cagrid.caobr.stubs.GetAnnotationsRequestFromOntologies();
    fromOntologiesContainer.setOntology(fromOntologies);
    params.setFromOntologies(fromOntologiesContainer);
    org.cagrid.caobr.stubs.GetAnnotationsRequestFromResources fromResourcesContainer = new org.cagrid.caobr.stubs.GetAnnotationsRequestFromResources();
    fromResourcesContainer.setResource(fromResources);
    params.setFromResources(fromResourcesContainer);
    params.setToken(token);
    org.cagrid.caobr.stubs.GetAnnotationsResponse boxedResult = portType.getAnnotations(params);
    return boxedResult.getAnnotation();
    }
  }

  public edu.wustl.caobr.Concept[] getConcepts(edu.wustl.caobr.Ontology[] fromOntologies,java.lang.String conceptName) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getConcepts");
    org.cagrid.caobr.stubs.GetConceptsRequest params = new org.cagrid.caobr.stubs.GetConceptsRequest();
    org.cagrid.caobr.stubs.GetConceptsRequestFromOntologies fromOntologiesContainer = new org.cagrid.caobr.stubs.GetConceptsRequestFromOntologies();
    fromOntologiesContainer.setOntology(fromOntologies);
    params.setFromOntologies(fromOntologiesContainer);
    params.setConceptName(conceptName);
    org.cagrid.caobr.stubs.GetConceptsResponse boxedResult = portType.getConcepts(params);
    return boxedResult.getConcept();
    }
  }

  public boolean isConcept(edu.wustl.caobr.Ontology[] fromOntologies,java.lang.String searchTerm) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"isConcept");
    org.cagrid.caobr.stubs.IsConceptRequest params = new org.cagrid.caobr.stubs.IsConceptRequest();
    org.cagrid.caobr.stubs.IsConceptRequestFromOntologies fromOntologiesContainer = new org.cagrid.caobr.stubs.IsConceptRequestFromOntologies();
    fromOntologiesContainer.setOntology(fromOntologies);
    params.setFromOntologies(fromOntologiesContainer);
    params.setSearchTerm(searchTerm);
    org.cagrid.caobr.stubs.IsConceptResponse boxedResult = portType.isConcept(params);
    return boxedResult.isResponse();
    }
  }

  public boolean isConceptInAnyOntology(java.lang.String searchTerm) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"isConceptInAnyOntology");
    org.cagrid.caobr.stubs.IsConceptInAnyOntologyRequest params = new org.cagrid.caobr.stubs.IsConceptInAnyOntologyRequest();
    params.setSearchTerm(searchTerm);
    org.cagrid.caobr.stubs.IsConceptInAnyOntologyResponse boxedResult = portType.isConceptInAnyOntology(params);
    return boxedResult.isResponse();
    }
  }

  public boolean[] isConcepts(java.lang.String[] tokens,edu.wustl.caobr.Ontology[] ontologies) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"isConcepts");
    org.cagrid.caobr.stubs.IsConceptsRequest params = new org.cagrid.caobr.stubs.IsConceptsRequest();
    params.setTokens(tokens);
    org.cagrid.caobr.stubs.IsConceptsRequestOntologies ontologiesContainer = new org.cagrid.caobr.stubs.IsConceptsRequestOntologies();
    ontologiesContainer.setOntology(ontologies);
    params.setOntologies(ontologiesContainer);
    org.cagrid.caobr.stubs.IsConceptsResponse boxedResult = portType.isConcepts(params);
    return boxedResult.getResponse();
    }
  }

  public boolean[] isConceptsInAnyOntology(java.lang.String[] tokens) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"isConceptsInAnyOntology");
    org.cagrid.caobr.stubs.IsConceptsInAnyOntologyRequest params = new org.cagrid.caobr.stubs.IsConceptsInAnyOntologyRequest();
    params.setTokens(tokens);
    org.cagrid.caobr.stubs.IsConceptsInAnyOntologyResponse boxedResult = portType.isConceptsInAnyOntology(params);
    return boxedResult.getResponse();
    }
  }

}
